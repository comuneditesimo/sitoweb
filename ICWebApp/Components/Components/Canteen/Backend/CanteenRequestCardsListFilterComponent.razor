@{
    var modalCSS = "";

    if (Modal)
    {
        modalCSS = "filter-container-modal";
    }
}
@if (Filter != null)
{

    <div class="filter-container @modalCSS">
        @if (Modal)
        {
            <div class="font-normal filter-label custom-color-primary">
                @TextProvider.Get("FILTER_TEXTSEARCH_TITLE")
            </div>
            <div class="extra-small-element-separator"></div>
        }
        <div class="filter-search-first-row">
            <div class="filter-search-input">
                <EditForm Model="@Filter" OnValidSubmit="@(() => FilterSearch())">
                    <div class="filter-searchbar">
                        <input name="@Guid.NewGuid()" type="text" @bind-value="@Filter.Text" onfocus="this.select();" placeholder="@TextProvider.Get("SEARCH_KEYWORD_PLACEHOLDER")"></input>
                    </div>
                </EditForm>
            </div>
            @if (!Modal)
            {
                @if (!string.IsNullOrEmpty(Filter.Text) || (Filter.CANTEEN_Card_Status_ID != null && Filter.CANTEEN_Card_Status_ID.Any()))
                {
                    <button class="btn btn-primary filter-clear-button" type="button" @onclick="ClearSearchBar" @onclick:stopPropagation="true">
                        <TelerikFontIcon IconClass="@("fa-regular fa-xmark")"></TelerikFontIcon>
                    </button>
                }
                else
                {
                    <button class="btn btn-secondary filter-clear-button" type="button" disabled="true" @onclick:stopPropagation="true">
                        <TelerikFontIcon IconClass="@("fa-regular fa-xmark")"></TelerikFontIcon>
                    </button>
                }
            }
        </div>
        <div class="small-element-separator"></div>
        @if (Modal)
        {
            <div class="font-normal filter-label custom-color-primary">
                @TextProvider.Get("FILTER_STATUS_TITLE")
            </div>
            <div class="extra-small-element-separator"></div>
        }
        @if (_statusList != null && _statusList.Count() > 1)
        {
            <div class="filter-element filter-authorities">
                @if (Filter.CANTEEN_Card_Status_ID != null && Filter.CANTEEN_Card_Status_ID.Any())
                {
                    <div class="btn btn-secondary authority-tag" @onclick="@(() => ClearTagFilter())" @onclick:stopPropagation="true">
                        <span>
                            <TelerikFontIcon IconClass="@("fa-duotone fa-filter-slash")"></TelerikFontIcon>
                            @TextProvider.Get("STATUS_TAG_FILTER_ALL")
                        </span>
                    </div>
                }
                else
                {
                    <div class="btn btn-primary authority-tag" @onclick:stopPropagation="true">
                        <span>
                            <TelerikFontIcon IconClass="@("fa-duotone fa-filter-slash")"></TelerikFontIcon>
                            @TextProvider.Get("STATUS_TAG_FILTER_ALL")
                        </span>
                    </div>
                }

                @foreach (V_CANTEEN_Subscriber_Card_Status _status in _statusList.OrderBy(p => p.ID))
                {
                    string buttonCSS = "btn-secondary";

                    if (Filter.CANTEEN_Card_Status_ID != null && Filter.CANTEEN_Card_Status_ID.Contains(_status.ID))
                    {
                        buttonCSS = "btn-primary";
                    }

                    <div class="btn @buttonCSS authority-tag" @onclick="@(() => AddFilter(_status.ID))" @onclick:stopPropagation="true">
                        <span>
                            <TelerikFontIcon IconClass="@_status.Icon"></TelerikFontIcon>
                            @_status.Status
                        </span>
                    </div>
                }
            </div>
        }
        @if (Modal)
        {
            <div class="element-separator"></div>
            <div class="filter-button-bar">
                @if (!string.IsNullOrEmpty(Filter.Text) || (Filter.CANTEEN_Card_Status_ID != null && Filter.CANTEEN_Card_Status_ID.Any()))
                {
                    <TelerikButton OnClick="@ClearSearchBar" ButtonType="ButtonType.Button" ThemeColor="Secondary" Class="form-filter-button btn btn-secondary" Icon="@("fa-regular fa-xmark")">@TextProvider.Get("FILTER_CLEAR")</TelerikButton>
                }
                else
                {
                    <TelerikButton OnClick="@ClearSearchBar" ButtonType="ButtonType.Button" Enabled="false" ThemeColor="Secondary" Class="form-filter-button btn btn-secondary" Icon="@("fa-regular fa-xmark")">@TextProvider.Get("FILTER_CLEAR")</TelerikButton>
                }

                <TelerikButton OnClick="@FilterSearch" ButtonType="ButtonType.Button" ThemeColor="Primary" Class="form-filter-button btn btn-primary" Icon="@("fad fa-search")">@TextProvider.Get("FILTER_SEARCH")</TelerikButton>
            </div>
        }
    </div>
}