@page "/Backend/Homepage/Impressum/Edit/{ID}"

@layout MainLayout

@using ICWebApp.Components.Components.Homepage.Backend.Person
@using ICWebApp.Components.Components.Homepage.Backend.Authority
@using ICWebApp.Components.Components.Homepage.Backend.Address
@using ICWebApp.Components.Components.Homepage.Backend.Theme

@if(Data != null && Languages != null)
{
    <div class="element-separator"></div>
    <div class="custom-background-default">
        <EditForm Model="Data">
            <DataAnnotationsValidator />
            <div class="form-group form-group-small">
                <div class="segment-title custom-color-primary">@TextProvider.Get("BACKEND_HOMEPAGE_IMPRESSUM_GENERAL")</div>
            </div>
            <div class="small-element-separator"></div>
            <LanguageInputSelector @bind-CurrentLanguage="@CurrentLanguage"></LanguageInputSelector>
            <div class="small-element-separator"></div>
            <div class="form-group form-group-small">
                <label class="form-label">@TextProvider.Get("BACKEND_HOMEPAGE_IMPRESSUM_TITLE")</label>
                @if (Data.HOME_Impressum_Extended != null && Data.HOME_Impressum_Extended.Count() > 0 && CurrentLanguage != null)
                {
                    <label class="font-detail">@Data.HOME_Impressum_Extended.FirstOrDefault(p => p.LANG_Language_ID != CurrentLanguage).Title</label>
                }
                <InputText name="@Guid.NewGuid()" @bind-Value="Data.HOME_Impressum_Extended.FirstOrDefault(p => p.LANG_Language_ID == CurrentLanguage).Title" class="form-control"></InputText>
            </div>
            <div class="small-element-separator"></div>
            <div class="form-group">
                <label class="form-label">@TextProvider.Get("BACKEND_HOMEPAGE_IMPRESSUM_CONTENT")</label>
            </div>
            <div class="form-group form-group-small">
                @if (Data.HOME_Impressum_Extended != null && Data.HOME_Impressum_Extended.Count() > 0 && CurrentLanguage != null)
                {

                    @if (string.IsNullOrEmpty(Data.HOME_Impressum_Extended.FirstOrDefault(p => p.LANG_Language_ID == CurrentLanguage).Description) && ID == "New")
                    {
                        Data.HOME_Impressum_Extended.FirstOrDefault(p => p.LANG_Language_ID == CurrentLanguage).Description = Data.HOME_Impressum_Extended.FirstOrDefault(p => p.LANG_Language_ID != CurrentLanguage).Description;
                    }

                    <SfRichTextEditor @bind-Value="Data.HOME_Impressum_Extended.FirstOrDefault(p => p.LANG_Language_ID == CurrentLanguage).Description" Height="350px">
                        <RichTextEditorToolbarSettings Items="@RichTextEditor.Tools" />
                        <RichTextEditorPasteCleanupSettings Prompt="true" />
                        <RichTextEditorImageSettings SaveUrl="@RichTextEditor.ImageSavePath" Path="@RichTextEditor.OpenPath" AllowedTypes="@RichTextEditor.AllowedTypes"></RichTextEditorImageSettings>
                    </SfRichTextEditor>
                }
            </div>
            <div class="element-separator"></div>
            <div class="form-button-container-separated form-group-small">
                <TelerikButton ButtonType="ButtonType.Button" ThemeColor="Secondary" Icon="SvgIcon.X" Class="k-standalone-button"
                               OnClick="@Cancel">@TextProvider.Get("BUTTON_CANCEL")</TelerikButton>
                <TelerikButton ButtonType="ButtonType.Button" ThemeColor="Primary" Icon="SvgIcon.ArrowRight" Class="k-standalone-button"
                               OnClick="@Save">@TextProvider.Get("BUTTON_SAVE")</TelerikButton>
            </div>
            </EditForm>
        </div>
}