@page "/Backend/Homepage/Venues/Edit/{ID}"

@layout MainLayout

@using ICWebApp.Components.Components.Homepage.Backend.Person
@using ICWebApp.Components.Components.Homepage.Backend.Authority
@using ICWebApp.Components.Components.Homepage.Backend.Address
@using ICWebApp.Components.Components.Homepage.Backend.Theme
@using ICWebApp.Components.Components.Homepage.Backend.Documents

@if(Data != null && CurrentLanguage != null)
{
    <div class="element-separator"></div>
    <div class="custom-background-default">
        <EditForm Model="Data">
            <DataAnnotationsValidator />
            <div class="form-group form-group-small">
                <div class="segment-title custom-color-primary">@TextProvider.Get("BACKEND_HOMEPAGE_VENUE_GENERAL")</div>
            </div>
            <div class="small-element-separator"></div>
            <LanguageInputSelector @bind-CurrentLanguage="@CurrentLanguage"></LanguageInputSelector>
            <div class="small-element-separator"></div>
            <div class="form-group form-group-small">
                <label class="form-label">@TextProvider.Get("BACKEND_HOMEPAGE_VENUE_TITLE")</label>
                @if (Data.HOME_Venue_Extended != null && Data.HOME_Venue_Extended.Count() > 0 && CurrentLanguage != null)
                {
                    <label class="font-detail">@Data.HOME_Venue_Extended.FirstOrDefault(p => p.LANG_Language_ID != CurrentLanguage).Title</label>
                }
                @if (string.IsNullOrEmpty(Data.HOME_Venue_Extended.FirstOrDefault(p => p.LANG_Language_ID == CurrentLanguage).Title))
                {
                    Data.HOME_Venue_Extended.FirstOrDefault(p => p.LANG_Language_ID == CurrentLanguage).Title = Data.HOME_Venue_Extended.FirstOrDefault(p => p.LANG_Language_ID != CurrentLanguage).Title;
                }
                <InputText name="@Guid.NewGuid()" @bind-Value="Data.HOME_Venue_Extended.FirstOrDefault(p => p.LANG_Language_ID == CurrentLanguage).Title" class="form-control"></InputText>
            </div>
            <div class="small-element-separator"></div>
            <div class="form-group">
                <label class="form-label">@TextProvider.Get("BACKEND_HOMEPAGE_VENUE_DESCRIPTION_SHORT")</label>
            </div>
            <div class="form-group form-group-small">
                @if (Data.HOME_Venue_Extended != null && Data.HOME_Venue_Extended.Count() > 0 && CurrentLanguage != null)
                {
                    @if (string.IsNullOrEmpty(Data.HOME_Venue_Extended.FirstOrDefault(p => p.LANG_Language_ID == CurrentLanguage).DescriptionShort) && ID == "New")
                    {
                        Data.HOME_Venue_Extended.FirstOrDefault(p => p.LANG_Language_ID == CurrentLanguage).DescriptionShort = Data.HOME_Venue_Extended.FirstOrDefault(p => p.LANG_Language_ID != CurrentLanguage).DescriptionShort;
                    }

                    <SfRichTextEditor @bind-Value="Data.HOME_Venue_Extended.FirstOrDefault(p => p.LANG_Language_ID == CurrentLanguage).DescriptionShort" Height="150px">
                        <RichTextEditorToolbarSettings Items="@RichTextEditor.ToolsOnlyDecoration" />
                        <RichTextEditorPasteCleanupSettings Prompt="true" />
                    </SfRichTextEditor>
                }
            </div>
            <div class="small-element-separator"></div>
            <div class="form-group">
                <label class="form-label">@TextProvider.Get("BACKEND_HOMEPAGE_VENUE_DESCRIPTION")</label>
            </div>
            <div class="form-group form-group-small">
                @if (Data.HOME_Venue_Extended != null && Data.HOME_Venue_Extended.Count() > 0 && CurrentLanguage != null)
                {
                    @if (string.IsNullOrEmpty(Data.HOME_Venue_Extended.FirstOrDefault(p => p.LANG_Language_ID == CurrentLanguage).Description) && ID == "New")
                    {
                        Data.HOME_Venue_Extended.FirstOrDefault(p => p.LANG_Language_ID == CurrentLanguage).Description = Data.HOME_Venue_Extended.FirstOrDefault(p => p.LANG_Language_ID != CurrentLanguage).Description;
                    }

                    <SfRichTextEditor @bind-Value="Data.HOME_Venue_Extended.FirstOrDefault(p => p.LANG_Language_ID == CurrentLanguage).Description" Height="350px">
                        <RichTextEditorToolbarSettings Items="@RichTextEditor.Tools" />
                        <RichTextEditorPasteCleanupSettings Prompt="true" />
                        <RichTextEditorImageSettings SaveUrl="@RichTextEditor.ImageSavePath" Path="@RichTextEditor.OpenPath" AllowedTypes="@RichTextEditor.AllowedTypes"></RichTextEditorImageSettings>
                    </SfRichTextEditor>
                }
            </div>
            <div class="small-element-separator"></div>
            <div class="form-group form-group-small">
                <label class="form-label">@TextProvider.Get("BACKEND_HOMEPAGE_HIGHLIGHT")</label>
                <SfSwitch @bind-Checked="Data.Highlight"></SfSwitch>
            </div>
            <div class="small-element-separator"></div>
            <div class="form-group form-group-small">
                <label class="form-label">@TextProvider.Get("BACKEND_HOMEPAGE_VENUE_TYPE")</label>
                <SfDropDownList TValue="Guid?" TItem="V_HOME_Venue_Type" PopupHeight="230px"
                                @bind-Value="@Data.HOME_Venue_Type_ID" DataSource="@Types" Placeholder="@TextProvider.Get("BACKEND_HOMEPAGE_PLACEHOLDER_SELECT")">
                    <DropDownListFieldSettings Value="ID" Text="Type"></DropDownListFieldSettings>
                </SfDropDownList>
            </div>          
            <div class="element-separator"></div>
            <div class="form-group form-group-small">
                <div class="segment-title custom-color-primary">@TextProvider.Get("BACKEND_HOMEPAGE_VENUE_PERSONS")</div>
            </div>
            <div class="small-element-separator"></div>
            <div class="form-group form-group-small">
                <label class="form-label">@TextProvider.Get("BACKEND_HOMEPAGE_VENUE_RESPONSIBLE")</label>
                <PersonSingleSelection @bind-SelectedPersonID="@Data.HOME_Person_ID"></PersonSingleSelection>
            </div>
            <div class="small-element-separator"></div>
            <div class="form-group form-group-small">
                <label class="form-label">@TextProvider.Get("BACKEND_HOMEPAGE_VENUE_ADDITIONAL_PERSONAL")</label>
                <PersonMultipleSelection @bind-SelectedPeople="@SelectedPeople"></PersonMultipleSelection>
            </div>
            <div class="element-separator"></div>
            <div class="form-group form-group-small">
                <div class="segment-title custom-color-primary">@TextProvider.Get("BACKEND_HOMEPAGE_KONTAKT")</div>
            </div>
            <div class="small-element-separator"></div>
            <div class="form-group form-group-small">
                <label class="form-label">@TextProvider.Get("BACKEND_HOMEPAGE_MUNICIPALITY_PHONE")</label>
                <CustomPhone @bind-Value="@Data.PhoneNr"></CustomPhone>
            </div>
            <div class="small-element-separator"></div>
            <div class="form-group form-group-small">
                <label class="form-label">@TextProvider.Get("BACKEND_HOMEPAGE_PERSON_PHONENR_MOBILE")</label>
                <CustomPhone @bind-Value="@Data.PhoneNrMobile"></CustomPhone>
            </div>
            <div class="small-element-separator"></div>
            <div class="form-group form-group-small">
                <label class="form-label">@TextProvider.Get("BACKEND_HOMEPAGE_MUNICIPALITY_EMAIL")</label>
                @if (Data.HOME_Venue_Extended != null && Data.HOME_Venue_Extended.Count() > 0 && CurrentLanguage != null)
                {
                    <label class="font-detail">@Data.HOME_Venue_Extended.FirstOrDefault(p => p.LANG_Language_ID != CurrentLanguage).EMail</label>
                }
                @if (string.IsNullOrEmpty(Data.HOME_Venue_Extended.FirstOrDefault(p => p.LANG_Language_ID == CurrentLanguage).EMail))
                {
                    Data.HOME_Venue_Extended.FirstOrDefault(p => p.LANG_Language_ID == CurrentLanguage).EMail = Data.HOME_Venue_Extended.FirstOrDefault(p => p.LANG_Language_ID != CurrentLanguage).EMail;
                }
                <InputText name="@Guid.NewGuid()" @bind-Value="Data.HOME_Venue_Extended.FirstOrDefault(p => p.LANG_Language_ID == CurrentLanguage).EMail" type="email" class="form-control"></InputText>
            </div>
            <div class="small-element-separator"></div>
            <div class="form-group form-group-small">
                <label class="form-label">@TextProvider.Get("BACKEND_HOMEPAGE_MUNICIPALITY_PECEMAIL")</label>
                @if (Data.HOME_Venue_Extended != null && Data.HOME_Venue_Extended.Count() > 0 && CurrentLanguage != null)
                {
                    <label class="font-detail">@Data.HOME_Venue_Extended.FirstOrDefault(p => p.LANG_Language_ID != CurrentLanguage).PECMail</label>
                }
                @if (string.IsNullOrEmpty(Data.HOME_Venue_Extended.FirstOrDefault(p => p.LANG_Language_ID == CurrentLanguage).PECMail))
                {
                    Data.HOME_Venue_Extended.FirstOrDefault(p => p.LANG_Language_ID == CurrentLanguage).PECMail = Data.HOME_Venue_Extended.FirstOrDefault(p => p.LANG_Language_ID != CurrentLanguage).PECMail;
                }
                <InputText name="@Guid.NewGuid()" @bind-Value="Data.HOME_Venue_Extended.FirstOrDefault(p => p.LANG_Language_ID == CurrentLanguage).PECMail" type="email" class="form-control"></InputText>
            </div>
            <div class="small-element-separator"></div>
            <div class="form-group form-group-small">
                <label class="form-label">@TextProvider.Get("BACKEND_HOMEPAGE_MUNICIPALITY_WEBSITE")</label>
                @if (Data.HOME_Venue_Extended != null && Data.HOME_Venue_Extended.Count() > 0 && CurrentLanguage != null)
                {
                    <label class="font-detail">@Data.HOME_Venue_Extended.FirstOrDefault(p => p.LANG_Language_ID != CurrentLanguage).Website</label>
                }
                @if (string.IsNullOrEmpty(Data.HOME_Venue_Extended.FirstOrDefault(p => p.LANG_Language_ID == CurrentLanguage).Website))
                {
                    Data.HOME_Venue_Extended.FirstOrDefault(p => p.LANG_Language_ID == CurrentLanguage).Website = Data.HOME_Venue_Extended.FirstOrDefault(p => p.LANG_Language_ID != CurrentLanguage).Website;
                }
                <InputText name="@Guid.NewGuid()" @bind-Value="Data.HOME_Venue_Extended.FirstOrDefault(p => p.LANG_Language_ID == CurrentLanguage).Website" class="form-control"></InputText>
            </div>
            <div class="element-separator"></div>
            <div class="form-group form-group-small">
                <div class="segment-title custom-color-primary">@TextProvider.Get("BACKEND_HOMEPAGE_MANAGED")</div>
            </div>
            <div class="small-element-separator"></div>
            <div class="form-group form-group-small">
                <label class="form-label">@TextProvider.Get("BACKEND_HOMEPAGE_THEMES")</label>
                <ThemeSelection @bind-SelectedThemes="@SelectedThemes"></ThemeSelection>
            </div>
            <div class="small-element-separator"></div>
            <div class="form-group form-group-small">
                <label class="form-label">@TextProvider.Get("BACKEND_HOMEPAGE_MANAGED_BY_PERSON")</label>
                <PersonSingleSelection @bind-SelectedPersonID="@Data.Managed_HOME_Person_ID"></PersonSingleSelection>
            </div>
            <div class="small-element-separator"></div>
            <div class="form-group form-group-small">
                <label class="form-label">@TextProvider.Get("BACKEND_HOMEPAGE_MANAGED_BY_AUTHORITY")</label>
                <AuthoritySingleSelection @bind-SelectedAuthorityID="@Data.Managed_AUTH_Authority_ID"></AuthoritySingleSelection>
            </div>
            <div class="element-separator"></div>
            <div class="form-group form-group-small">
                <div class="segment-title">@TextProvider.Get("BACKEND_HOMEPAGE_IMAGES")</div>
            </div>
            <div class="small-element-separator"></div>
            <div class="form-group form-group-small">
                <ImageUpload @bind-FileInfo="ExistingFile"></ImageUpload>
            </div> 
            <div class="element-separator"></div>
            <div class="form-group form-group-small">
                <div class="segment-title">@TextProvider.Get("BACKEND_HOMEPAGE_DOKUMENTS")</div>
            </div>
            <div class="small-element-separator"></div>
            <div class="form-group form-group-small">
                <DocumentMultipleSelection @bind-SelectedDocuments="SelectedDocuments"></DocumentMultipleSelection>
            </div>
            <div class="element-separator"></div>
            <div class="form-group form-group-small">
                <div class="segment-title">@TextProvider.Get("BACKEND_HOMEPAGE_LOCATION")</div>
            </div>
            <div class="small-element-separator"></div>
                <LanguageInputSelector @bind-CurrentLanguage="@CurrentLanguage"></LanguageInputSelector>
            <div class="small-element-separator"></div>
            <div class="form-group form-group-small">
                @if (Data.HOME_Venue_Extended != null && Data.HOME_Venue_Extended.Count() > 0 && CurrentLanguage != null)
                {
                    @if (string.IsNullOrEmpty(Data.HOME_Venue_Extended.FirstOrDefault(p => p.LANG_Language_ID == CurrentLanguage).Address))
                    {
                        Data.HOME_Venue_Extended.FirstOrDefault(p => p.LANG_Language_ID == CurrentLanguage).Address = Data.HOME_Venue_Extended.FirstOrDefault(p => p.LANG_Language_ID != CurrentLanguage).Address;
                    }
                    <Map Language="CurrentLanguage"
                         @bind-Address="@Data.HOME_Venue_Extended.FirstOrDefault(p => p.LANG_Language_ID == CurrentLanguage).Address"
                         @bind-Latitude="@Data.Lat"
                         @bind-Longitude="@Data.Lang"
                         AllowDefault="false" />
                }
            </div>
            <div class="element-separator"></div>
            <div class="form-button-container-separated form-group-small">
                <TelerikButton ButtonType="ButtonType.Button" ThemeColor="Secondary" Icon="SvgIcon.X" Class="k-standalone-button"
                               OnClick="@Cancel">@TextProvider.Get("BUTTON_CANCEL")</TelerikButton>
                <TelerikButton ButtonType="ButtonType.Button" ThemeColor="Primary" Icon="SvgIcon.ArrowRight" Class="k-standalone-button"
                               OnClick="@Save">@TextProvider.Get("BUTTON_SAVE")</TelerikButton>
            </div>
            </EditForm>
        </div>
}