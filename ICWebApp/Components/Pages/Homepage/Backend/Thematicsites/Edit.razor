@page "/Backend/Homepage/Thematicsites/Edit/{ID}"

@layout MainLayout

@using ICWebApp.Components.Components.Homepage.Backend.Person
@using ICWebApp.Components.Components.Homepage.Backend.Authority
@using ICWebApp.Components.Components.Homepage.Backend.Address
@using ICWebApp.Components.Components.Homepage.Backend.Theme
@using Syncfusion.Blazor.Inputs

@if(Data != null && CurrentLanguage != null)
{
    <div class="element-separator"></div>
    <div class="custom-background-default">
        <EditForm Model="Data">
            <DataAnnotationsValidator />
            <div class="form-group form-group-small">
                <div class="segment-title custom-color-primary">@TextProvider.Get("BACKEND_HOMEPAGE_THEMATIC_SITES_GENERAL")</div>
            </div>
            <div class="small-element-separator"></div>
            <LanguageInputSelector @bind-CurrentLanguage="@CurrentLanguage"></LanguageInputSelector>
           <div class="small-element-separator"></div>
            <div class="form-group form-group-small">
                    <label class="form-label">@TextProvider.Get("BACKEND_HOMEPAGE_THEMATIC_SITES_TITLE")</label>
                @if (Data.HOME_Thematic_Sites_Extended != null && Data.HOME_Thematic_Sites_Extended.Count() > 0 && CurrentLanguage != null)
                {
                    <label class="font-detail">@Data.HOME_Thematic_Sites_Extended.FirstOrDefault(p => p.LANG_Language_ID != CurrentLanguage).Title</label>
                }
                <InputText name="@Guid.NewGuid()" @bind-Value="Data.HOME_Thematic_Sites_Extended.FirstOrDefault(p => p.LANG_Language_ID == CurrentLanguage).Title" class="form-control"></InputText>
            </div>
            <div class="small-element-separator"></div>
            <div class="form-group form-group-small">
                <label class="form-label">@TextProvider.Get("MAINMENU_BACKEND_HOMEPAGE_THEMATIC_SITES_TYPE")</label>
                <SfDropDownList TValue="Guid?" TItem="V_HOME_Thematic_Sites_Type" PopupHeight="230px"
                                @bind-Value="@Data.HOME_Thematic_Sites_Type_ID" DataSource="@Types" Placeholder="@TextProvider.Get("BACKEND_HOMEPAGE_PLACEHOLDER_SELECT")">
                    <DropDownListFieldSettings Value="ID" Text="Type"></DropDownListFieldSettings>
                </SfDropDownList>
            </div>
            <div class="small-element-separator"></div>
            <div class="form-group form-group-small">
                <label class="form-label">@TextProvider.Get("BACKEND_HOMEPAGE_THEMATIC_SITES_URL")</label>
                @if (Data.HOME_Thematic_Sites_Extended != null && Data.HOME_Thematic_Sites_Extended.Count() > 0 && CurrentLanguage != null)
                {
                    <label class="font-detail">@Data.HOME_Thematic_Sites_Extended.FirstOrDefault(p => p.LANG_Language_ID != CurrentLanguage).Url</label>
                }
                <InputText name="@Guid.NewGuid()" @bind-Value="Data.HOME_Thematic_Sites_Extended.FirstOrDefault(p => p.LANG_Language_ID == CurrentLanguage).Url" class="form-control"></InputText>
            </div>
            <div class="small-element-separator"></div>
            <div class="form-group form-group-small">
                <label class="form-label">@TextProvider.Get("BACKEND_HOMEPAGE_THEMATIC_SITES_COLOR")</label>
                <SfColorPicker @bind-Value="@Data.Color"></SfColorPicker>
            </div>
            <div class="small-element-separator"></div>
            <div class="form-group">
                <label class="form-label">@TextProvider.Get("BACKEND_HOMEPAGE_THEMATIC_SITES_DESCRIPTION_SHORT")</label>
            </div>
            <div class="form-group form-group-small">
            @if (Data.HOME_Thematic_Sites_Extended != null && Data.HOME_Thematic_Sites_Extended.Count() > 0 && CurrentLanguage != null)
                {

                    @if (string.IsNullOrEmpty(Data.HOME_Thematic_Sites_Extended.FirstOrDefault(p => p.LANG_Language_ID == CurrentLanguage).DescriptionShort) && ID == "New")
                    {
                    Data.HOME_Thematic_Sites_Extended.FirstOrDefault(p => p.LANG_Language_ID == CurrentLanguage).DescriptionShort = Data.HOME_Thematic_Sites_Extended.FirstOrDefault(p => p.LANG_Language_ID != CurrentLanguage).DescriptionShort;
                    }

                <SfRichTextEditor @bind-Value=" Data.HOME_Thematic_Sites_Extended.FirstOrDefault(p => p.LANG_Language_ID == CurrentLanguage).DescriptionShort" Height="150px">
                        <RichTextEditorToolbarSettings Items="@RichTextEditor.ToolsOnlyDecoration" />
                        <RichTextEditorPasteCleanupSettings Prompt="true" />
                    </SfRichTextEditor>
                }
            </div>
            <div class="small-element-separator"></div>
            <div class="form-group">
                <label class="form-label">@TextProvider.Get("BACKEND_HOMEPAGE_THEMATIC_SITES_DESCRIPTION")</label>
            </div>
            <div class="form-group form-group-small">
                @if (Data.HOME_Thematic_Sites_Extended != null && Data.HOME_Thematic_Sites_Extended.Count() > 0 && CurrentLanguage != null)
                {

                    @if (string.IsNullOrEmpty(Data.HOME_Thematic_Sites_Extended.FirstOrDefault(p => p.LANG_Language_ID == CurrentLanguage).Description) && ID == "New")
                    {
                        Data.HOME_Thematic_Sites_Extended.FirstOrDefault(p => p.LANG_Language_ID == CurrentLanguage).Description = Data.HOME_Thematic_Sites_Extended.FirstOrDefault(p => p.LANG_Language_ID != CurrentLanguage).Description;
                    }

                    <SfRichTextEditor @bind-Value=" Data.HOME_Thematic_Sites_Extended.FirstOrDefault(p => p.LANG_Language_ID == CurrentLanguage).Description" Height="250px">
                        <RichTextEditorToolbarSettings Items="@RichTextEditor.Tools" />
                        <RichTextEditorPasteCleanupSettings Prompt="true" />
                        <RichTextEditorImageSettings SaveUrl="@RichTextEditor.ImageSavePath" Path="@RichTextEditor.OpenPath" AllowedTypes="@RichTextEditor.AllowedTypes"></RichTextEditorImageSettings>
                    </SfRichTextEditor>
                }
            </div>
            <div class="element-separator"></div>
            <div class="form-group form-group-small">
                <div class="segment-title custom-color-primary">@TextProvider.Get("BACKEND_HOMEPAGE_THEMATIC_SITES_IMAGE")</div>
            </div>
            <div class="small-element-separator"></div>
            <div class="form-group form-group-small">
                <UploadComponent @bind-FileInfo="Data.Image" Multiple="false" Accept=".jpg, .png, .jpeg, .webp"></UploadComponent>
            </div>
            <div class="element-separator"></div>
            <div class="form-group form-group-small">
                <div class="segment-title custom-color-primary">@TextProvider.Get("BACKEND_HOMEPAGE_THEMATIC_SITES_DOCUMENTS")</div>
            </div>
            <div class="small-element-separator"></div>
            <div class="form-group form-group-small">
                <div class="form-group form-group-small">
                    <label class="form-label custom-color-primary">@TextProvider.Get("LANGUAGE_GERMAN")</label>
                </div>
                <div class="small-element-separator"></div>
                <div class="form-multicolumn">
                    <div class="form-multicolumn-column">
                        <div class="form-group">
                            @if (DocumentsDE != null)
                            {
                                <UploadComponent ID="@("fileUpload_" + LanguageSettings.German)" @bind-FileInfoList="DocumentsDE" Multiple="true" Accept=".pdf, .docx"></UploadComponent>
                            }
                        </div>
                    </div>
                </div>
                <div class="small-element-separator"></div>
                <div class="form-group form-group-small">
                    <label class="form-label custom-color-primary">@TextProvider.Get("LANGUAGE_ITALIAN")</label>
                </div>
                <div class="small-element-separator"></div>
                <div class="form-multicolumn">
                    <div class="form-multicolumn-column">
                        <div class="form-group">
                            @if (DocumentsIT != null)
                            {
                                <UploadComponent ID="@("fileUpload_" + LanguageSettings.Italian)" @bind-FileInfoList="DocumentsIT" Multiple="true" Accept=".pdf, .docx"></UploadComponent>
                            }
                        </div>
                    </div>
                </div>
                @if (Ladinisch == true)
                {
                    <div class="form-group form-group-small">
                        <label class="form-label custom-color-primary">@TextProvider.Get("LANGUAGE_LADINISCH")</label>
                    </div>
                    <div class="small-element-separator"></div>
                    <div class="form-multicolumn">
                        <div class="form-multicolumn-column">
                            <div class="form-group">
                                @if (DocumentsLA != null)
                                {
                                    <UploadComponent ID="@("fileUpload_" + LanguageSettings.Ladinisch)" @bind-FileInfoList="DocumentsLA" Multiple="true" Accept=".pdf, .docx"></UploadComponent>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="form-button-container-separated form-group-small">
                <TelerikButton ButtonType="ButtonType.Button" ThemeColor="Secondary" Icon="SvgIcon.X" Class="k-standalone-button"
                               OnClick="@Cancel">@TextProvider.Get("BUTTON_CANCEL")</TelerikButton>
                <TelerikButton ButtonType="ButtonType.Button" ThemeColor="Primary" Icon="SvgIcon.ArrowRight" Class="k-standalone-button"
                               OnClick="@Save">@TextProvider.Get("BUTTON_SAVE")</TelerikButton>
            </div> 
            </EditForm>
        </div>
}