@page "/Backend/Homepage/PNRR/Chapter/Edit/{ProjectID}/{ID}"

@layout MainLayout

@using ICWebApp.Components.Components.Homepage.Backend.Person
@using ICWebApp.Components.Components.Homepage.Backend.Authority
@using ICWebApp.Components.Components.Homepage.Backend.Address
@using ICWebApp.Components.Components.Homepage.Backend.Theme
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Popups

@if(Data != null && Languages != null)
{
    <div class="element-separator"></div>
    <div class="custom-background-default">
        <EditForm Model="Data">
            <DataAnnotationsValidator />
            <div class="form-group form-group-small">
                <div class="segment-title custom-color-primary">@TextProvider.Get("BACKEND_HOMEPAGE_PNRR_CHAPTER_GENERAL")</div>
            </div>
            <div class="small-element-separator"></div>
            <LanguageInputSelector @bind-CurrentLanguage="@CurrentLanguage"></LanguageInputSelector>
            <div class="small-element-separator"></div>
            <div class="form-group form-group-small">
                <label class="form-label">@TextProvider.Get("BACKEND_HOMEPAGE_PNRR_CHAPTER_TITLE")</label>
                @if (Data.HOME_PNRR_Chapter_Extended != null && Data.HOME_PNRR_Chapter_Extended.Count() > 0 && CurrentLanguage != null)
                {
                    <label class="font-detail">@Data.HOME_PNRR_Chapter_Extended.FirstOrDefault(p => p.LANG_Language_ID != CurrentLanguage).Title</label>
                }
                <InputText name="@Guid.NewGuid()" @bind-Value="Data.HOME_PNRR_Chapter_Extended.FirstOrDefault(p => p.LANG_Language_ID == CurrentLanguage).Title" class="form-control"></InputText>
            </div>
            <div class="small-element-separator"></div>
            <div class="form-group">
                <label class="form-label">@TextProvider.Get("BACKEND_HOMEPAGE_PNRR_CHAPTER_CONTENT")</label>
            </div>
            <div class="form-group form-group-small">
                @if (Data.HOME_PNRR_Chapter_Extended != null && Data.HOME_PNRR_Chapter_Extended.Count() > 0 && CurrentLanguage != null)
                {

                    @if (string.IsNullOrEmpty(Data.HOME_PNRR_Chapter_Extended.FirstOrDefault(p => p.LANG_Language_ID == CurrentLanguage).Description) && ID == "New")
                    {
                        Data.HOME_PNRR_Chapter_Extended.FirstOrDefault(p => p.LANG_Language_ID == CurrentLanguage).Description = Data.HOME_PNRR_Chapter_Extended.FirstOrDefault(p => p.LANG_Language_ID != CurrentLanguage).Description;
                    }

                    <SfRichTextEditor @bind-Value="Data.HOME_PNRR_Chapter_Extended.FirstOrDefault(p => p.LANG_Language_ID == CurrentLanguage).Description" Height="350px">
                        <RichTextEditorToolbarSettings Items="@RichTextEditor.Tools" />
                        <RichTextEditorPasteCleanupSettings Prompt="true" />
                        <RichTextEditorImageSettings SaveUrl="@RichTextEditor.ImageSavePath" Path="@RichTextEditor.OpenPath" AllowedTypes="@RichTextEditor.AllowedTypes"></RichTextEditorImageSettings>
                    </SfRichTextEditor>
                }
            </div>
            <div class="small-element-separator"></div>
            <div class="form-group">
                <label class="form-label">@TextProvider.Get("BACKEND_HOMEPAGE_PNRR_CHAPTER_DOCUMENTS")</label>
            </div>
            <div class="small-element-separator"></div>            
            <div class="form-group form-group-small">
                <SfGrid DataSource="@Documents.OrderBy(p => p.Filename).ToList()" AllowPaging="true" AllowSorting="true" AllowResizing="true" AllowFiltering="true" Height="100%">
                    <GridPageSettings PageSize="25"></GridPageSettings>
                    <SfToolbar>
                        <ToolbarItems>
                            <ToolbarItem Type="ItemType.Button">
                                <Template>
                                    <div class="btn btn-secondary" @onclick="NewDocument">@TextProvider.Get("ADD")</div>
                                </Template>
                            </ToolbarItem>
                        </ToolbarItems>
                    </SfToolbar>
                    <Syncfusion.Blazor.Grids.GridColumns>
                        <Syncfusion.Blazor.Grids.GridColumn Field="@nameof(V_HOME_PNRR_Chapter_Document.Filename)" HeaderText="@TextProvider.Get("BACKEND_HOMEPAGE_PNRR_CHAPTER_DOCUMENT_FILENAME")" Width="auto"></Syncfusion.Blazor.Grids.GridColumn>
                        <Syncfusion.Blazor.Grids.GridColumn Width="130px" HeaderText="@TextProvider.Get("ACTIONS")">
                            <Template Context="chapterContext">
                                @{
                                    V_HOME_PNRR_Chapter_Document item = chapterContext as V_HOME_PNRR_Chapter_Document;

                                    if (item != null)
                                    {
                                        <div class="action-button-container">
                                            <SfTooltip Content="@TextProvider.Get("TOOLTIP_DELETE")" Position="@Position.LeftCenter">
                                                <div class="btn btn-secondary btn-icon" @onclick="@(() => DeleteDocument(item))">
                                                    <i class="fa-regular fa-trash-can"></i>
                                                </div>
                                            </SfTooltip>
                                            <SfTooltip Content="@TextProvider.Get("TOOLTIP_EDIT")" Position="@Position.LeftCenter">
                                                <div class="btn btn-secondary btn-icon" @onclick="@(() => EditDocument(item))">
                                                    <i class="fa-regular fa-pen"></i>
                                                </div>
                                            </SfTooltip>
                                        </div>
                                    }
                                }
                            </Template>
                        </Syncfusion.Blazor.Grids.GridColumn>
                    </Syncfusion.Blazor.Grids.GridColumns>
                </SfGrid>
            </div>
            <div class="element-separator"></div>
            <div class="form-button-container-separated form-group-small">
                <TelerikButton ButtonType="Telerik.Blazor.ButtonType.Button" ThemeColor="Secondary" Icon="SvgIcon.X" Class="k-standalone-button"
                               OnClick="@Cancel">@TextProvider.Get("BUTTON_CANCEL")</TelerikButton>
                <TelerikButton ButtonType="Telerik.Blazor.ButtonType.Button" ThemeColor="Primary" Icon="SvgIcon.ArrowRight" Class="k-standalone-button"
                               OnClick="@(() => Save(true))">@TextProvider.Get("BUTTON_SAVE")</TelerikButton>
            </div>
            </EditForm>
        </div>
}